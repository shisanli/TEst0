<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7YhTAAAAAElFTkSuQmCC
</value>
  </data>
</root>